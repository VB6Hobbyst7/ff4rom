// This is a modification of my usual duplication patch; it branches to space on the ROM that is a little past where the spell learning patch that some ROM hack projects use lives.

// This first patch is simply an instruction saying "go forward a bit, then do what you see there."
const int duplicationPatchBrancherAddress = 0x1f20d;
const int duplicationPatchBrancherData = new byte[] {
	0x80, 0x29, 0xff
}

// This is the normal payload.  Since this code operates completely on Branches and not Jumps, it doesn't need to be altered from the original patch.
const int duplicationPatchAddress = 0x1f238;
byte[] duplicationPatchData = new byte[] {
	0x7b, 0x85, 0xa9, 0xa2, 0x33, 0x10, 0xbd, 0x00, 0x00, 0xd0, 0x03, 0x9d, 0x01, 0x00, 0xc9, 0x60,
	0xd0, 0x04, 0x7b, 0x9d, 0x01, 0x00, 0xbd, 0x02, 0x00, 0xd0, 0x03, 0x9d, 0x03, 0x00, 0xc9, 0x60,
	0xd0, 0x04, 0x7b, 0x9d, 0x03, 0x00, 0xe6, 0xa9, 0xa5, 0xa9, 0xc9, 0x05, 0xf0, 0x0a, 0xc2, 0x20,
	0x8a, 0x69, 0x40, 0x00, 0xaa, 0xe2, 0x20, 0x80, 0xcd, 0xa9, 0x30, 0x85, 0x19, 0xc2, 0x20, 0x7b,
	0xe2, 0x20, 0x4c, 0xd8, 0x95
};
